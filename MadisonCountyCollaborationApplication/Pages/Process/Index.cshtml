@page
@using System.Data.SqlClient;
@using MadisonCountyCollaborationApplication.Pages.DB;
@using System.IO;
@model MadisonCountyCollaborationApplication.Pages.Process.IndexModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Madison County - @Model.ProcessName Process</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .upload {
            position: relative;
            float: right;
        }

        #download {
            text-align: center;
        }

        #upload-card {
            position: relative;
            float: right;
        }
    </style>
</head>
<body>

    @{
        var documentsFolderPath = System.IO.Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "Documents");
        var ProcessFolderMap = new Dictionary<int, string>
    {
    { 3, "Admin" },
    { 1, "Budgeting" },
    { 5, "Economic" },
    { 4, "Management" },
    { 2, "Revenue" }
    };

        ProcessFolderMap.TryGetValue(Model.ProcessID, out string currentProcessFolderName);

        if (string.IsNullOrEmpty(currentProcessFolderName))
        {
            // Optionally, handle the case where there's no matching folder for the ProcessID
            currentProcessFolderName = "Default"; // Setting a default folder name or handle it as needed
        }

        var currentProcessFolderPath = System.IO.Path.Combine(documentsFolderPath, currentProcessFolderName);
    }

    <div class="card" id="upload-card">
        <div class="upload">
            <form method="post" enctype="multipart/form-data" asp-page-handler="Upload">
                <label for="fileUpload">Choose a file:</label>
                <input type="file" id="fileUpload" name="fileUpload">
                <button type="submit" class="btn btn-primary">Upload</button>
            </form>
        </div>
    </div>

    <h1>@Model.ProcessName</h1>

    <ul class="nav nav-tabs" id="contentTabs">
        <li class="nav-item">
            <a class="nav-link active" id="documents-tab" data-bs-toggle="tab" href="#DocumentTableContainer">Documents</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="datasets-tab" data-bs-toggle="tab" href="#DatasetTableContainer">Datasets</a>
        </li>
    </ul>

    <div class="card">
        <div class="tab-content" id="DocumentTableContainer">
            @if (!string.IsNullOrEmpty(currentProcessFolderName) && Directory.Exists(currentProcessFolderPath))
            {
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Document Name</th>
                            <th>Type</th>
                            <th>File Size (KB)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var filePath in Directory.GetFiles(currentProcessFolderPath))
                        {
                            FileInfo fileInfo = new FileInfo(filePath);
                            string fileName = System.IO.Path.GetFileName(filePath);
                            <tr>
                                <td><a href="@($"/Documents/{currentProcessFolderName}/{fileName}")" target="_blank">@fileName</a></td>
                                <td>@System.IO.Path.GetExtension(filePath).TrimStart('.').ToUpperInvariant()</td>
                                <td>@(fileInfo.Length / 1024)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No documents found for this process.</p>
            }
        </div>

        <div class="tab-content" id="DatasetTableContainer" style="display: none;">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Date Uploaded</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        string sqlQuery = $"SELECT Datasets.datasetID, Datasets.dataSetName FROM Datasets INNER JOIN DatasetProcess ON DatasetProcess.datasetID = Datasets.datasetID WHERE DatasetProcess.ProcessID = {Model.ProcessID};";
                        SqlDataReader DatasetReader = DBClass.GeneralReaderQuery(sqlQuery);

                        while (DatasetReader.Read())
                        {
                            <tr>
                                <td>@DatasetReader["datasetID"].ToString()</td>
                                <td>
                                    <a asp-page="../Dataset/ViewData" asp-route-datasetID="@DatasetReader["datasetID"]">
                                        @DatasetReader["dataSetName"].ToString()
                                    </a>
                                </td>
                                <td>Upload Date</td> <!-- Placeholder for Upload Date, adjust as necessary -->
                            </tr>
                        }
                        DatasetReader.Close(); // Always close the SqlDataReader when done.
                    }
                </tbody>
            </table>
        </div>
    </div>

    </div>

    @section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Setup tab switching functionality
                const tabs = document.querySelectorAll('#contentTabs .nav-link');
                tabs.forEach(tab => {
                    tab.addEventListener('click', function (e) {
                        e.preventDefault();
                        tabs.forEach(t => t.classList.remove('active'));
                        this.classList.add('active');
                        const target = this.getAttribute('href');
                        // Hide all tab-content divs
                        document.querySelectorAll('.tab-content').forEach((content) => {
                            content.style.display = 'none';
                        });
                        // Show the selected tab content
                        document.querySelector(target).style.display = 'block';
                    });
                });

                // Initially hide dataset container, show documents
                document.getElementById('DatasetTableContainer').style.display = 'none';
                document.getElementById('DocumentTableContainer').style.display = 'block';

                // Adjust initial tab state if needed
                const initialTab = document.getElementById('documents-tab');
                if (initialTab) {
                    initialTab.click();
                }
            });
        </script>
    }

</body>
</html>
